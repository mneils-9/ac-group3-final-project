avg_spreads <- spread_scores_df %>%
group_by(schedule_season) %>%
summarize(avg_spread = mean(spread_favorite))
avg_ous <- spread_scores_df %>%
group_by(schedule_season) %>%
summarise(avg_ou = mean(over_under_line, na.rm = TRUE))
year_score_df <- left_join(prop_home_win, avg_spreads)
year_score_df <- left_join(year_score_df, avg_ous)
sb_spreads <- spread_scores_df %>%
filter(schedule_week == "Superbowl")
theme_set(theme_grey())
ggplot(data = sb_spreads) +
geom_line(mapping = aes(x = schedule_season, y = spread_favorite), color = "skyblue4") +
xlab("Season") +
ylab("Avg. Spread") +
theme(text = element_text(size = 10,  family = "mono"))
spread_scores_df <- mutate(spread_scores_df, team_favorite = NA)
for (i in 1:nrow(spread_scores_df)) {
if (spread_scores_df$team_favorite_id[i] == "PICK") {
spread_scores_df$team_favorite[i] <- "PICK"
} else {
team <- teams %>%
filter(Abbreviation == spread_scores_df$team_favorite_id[i]) %>%
select(Name)
spread_scores_df$team_favorite[i] <- team
}
}
spread_scores_df <- mutate(spread_scores_df, team_win = NA)
for (i in 1:nrow(spread_scores_df)) {
if (spread_scores_df$home_win[i]) {
spread_scores_df$team_win[i] <- spread_scores_df$team_home[i]
} else {
spread_scores_df$team_win[i] <- spread_scores_df$team_away[i]
}
}
# Plot proportion home wins over the years.
# ggplot() +
#   geom_line(data = year_score_df, aes(x = schedule_season, y = prop_home_wins), color = "darkcyan") +
#   ggsave("homewins.png")
# Plot avg ou over the years.
# ggplot() +
#   geom_line(data = year_score_df, aes(x = schedule_season, y = avg_ou), color = "darkcyan") +
#   ggsave("ou.png")
# Plot avg line over the years.
# ggplot() +
#   geom_line(data = year_score_df, aes(x = schedule_season, y = avg_spread), color = "darkcyan") +
#   ggsave("avgline.png")
# Plot range of spreads for each week
# spread_scores_df %>%
#   filter(schedule_season == 2020) %>%
#   ggplot(aes(x = spread_favorite, xend = spread_favorite,
#              y = schedule_week, group = schedule_week)) +
#   geom_dumbbell(color="#a3c4dc", size=0.75, point.colour.l="#0e668b")
# Plots the spreads for each week different visual
# g <- spread_scores_df %>%
#   filter(schedule_season == 2020) %>%
#   arrange(schedule_date, decreasing = TRUE) %>%
#   ggplot(aes(schedule_week, spread_favorite))
# g + geom_tufteboxplot() +
#   theme(axis.text.x = element_text(angle=65, vjust=0.6))
spread_scores_df <- mutate(spread_scores_df, favorite_win = str_detect(str_split(team_favorite)[length(~)], team_win)))
spread_scores_df <- mutate(spread_scores_df, favorite_win = str_detect(str_split(team_favorite)[length(~)], team_win)))
spread_scores_df <- mutate(spread_scores_df, favorite_win = str_detect(team_favorite, team_win))
str_split("Green Bay Backes", " ")
str_split("Green Bay Backes", " ")[length(~)]
str_split("Green Bay Backes", " ")[length()]
str_split("Green Bay Backes", " ")[length(str_split("Green Bay Backes", " "))]
str_split("Green Bay Backes", " ")[0][length(str_split("Green Bay Backes", " "))]
str_split("Green Bay Backes", " ")[1][length(str_split("Green Bay Backes", " "))]
str_split("Green Bay Backes", " ")[2][length(str_split("Green Bay Backes", " "))]
str_split("Green Bay Backes", " ")[1][length(str_split("Green Bay Backes", " "))]
str_split("Green Bay Backes", " ")[1][1]
str_split("Green Bay Backes", " ")[1][2]
str_split("Green Bay Backes", " ")[1][3]
str_split("Green Bay Backes", " ")[2][3]
str_split("Green Bay Backes", " ")[[length(str_split("Green Bay Backes", " "))]]
str_split("Green Bay Backes", " ")[[1]]
str_split("Green Bay Backes", " ")[[2]]
str_split("Green Bay Backes", " ")[[1]][length(str_split("Green Bay Backes", " "))]
str_split("Green Bay Backes", " ")[[1]][2]
str_split("Green Bay Backes", " ")[[1]][3]
str_split("Green Bay Backes", " ")[[1]][length(str_split("Green Bay Backes", " ")[[1]])]
spread_scores_df <- mutate(spread_scores_df, favorite_win = str_detect(str_split(team_favorite, " ")[[1]][length(str_split(team_favorite, " ")[[1]])], team_win))
str_detect("ballsack", "a")
str_detect("green bay packers", "packers")
str_detect( "packers", "green bay packers")
spread_scores_df <- mutate(spread_scores_df, favorite_win = str_detect(team_win, str_split(team_favorite, " ")[[1]][length(str_split(team_favorite, " ")[[1]])]))
str_split(team_favorite, " ")[[1]][length(str_split(team_favorite, " ")[[1]])]
str_split(year_score_df$team_favorite, " ")[[1]][length(str_split(year_score_df$team_favorite, " ")[[1]])]
str_detect("Green Bay Packers", str_split("Green Bay Packers", " ")[[1]][length(str_split(team_favorite, " ")[1])])
str_detect("Green Bay Packers", str_split("Green Bay Packers", " ")[[1]][length(str_split("Green Bay Packers", " ")[1])])
str_detect("Dallas Cowboys", str_split("Dallas Cowboys", " ")[[1]][length(str_split("Dallas Cowboys", " ")[1])])
spread_scores_df <- mutate(spread_scores_df, favorite_win = str_detect(team_win, str_split(team_favorite, " ")[[1]][length(str_split(team_favorite, " ")[[1]])]))
length(str_split("team_favorite", " ")[[1]]
l
length(str_split("team_favorite", " ")[[1]])
length(str_split("team favorite", " ")[[1]])
str_split("team favorite", " ")[[1]]
str_split("team favorite", " ")[[1]][1]
str_split("team favorite", " ")[[1]][2]
str_detect("Baltimore Colts", str_split("Indianapolis Colts", " ")[[1]][length(str_split("Indianapolis Colts", " ")[1])])
str_split("Indianapolis Colts", " ")[[1]][length(str_split("Indianapolis Colts", " ")[1])]
str_split("Indianapolis Colts", " ")[[1]][length(str_split("Indianapolis Colts", " ")[[1]])]
spread_scores_df <- mutate(spread_scores_df, favorite_win = str_detect(team_win, str_split(team_favorite, " ")[[1]][length(str_split(team_favorite, " ")[[1]])]))
spread_scores_df <- mutate(spread_scores_df, favorite_win = str_detect(team_win, team_favorite))
spread_scores_df <- mutate(spread_scores_df, favorite_win = lapply(str_detect(team_win, team_favorite)))
spread_scores_df <- mutate(spread_scores_df, favorite_win = lapply(team_win, team_favorite, str_detect()))
spread_scores_df <- mutate(spread_scores_df, favorite_win = (team_win == team_favorite))
unique(spread_scores_df$weather_detail)
table(spread_scores_df$weather_detail)
histogram(spread_scores_df$weather_detail)
hist(spread_scores_df$weather_detail)
barplot(spread_scores_df$weather_detail)
barplot(spread_scores_df$weather_detail)
View(spread_scores_df)
spread_scores_df %>% group_by(schedule_week) %>%
ggplot() +
geom_line(mapping = aes(x = schedule_weel, y = mean(spread_favorite)))
library(tidyverse)
spread_scores_df %>% group_by(schedule_week) %>%
ggplot() +
geom_line(mapping = aes(x = schedule_weel, y = mean(spread_favorite)))
spread_scores_df %>% group_by(schedule_week) %>%
ggplot() +
geom_line(mapping = aes(x = schedule_week, y = mean(spread_favorite)))
spread_scores_df %>% group_by(schedule_week) %>%
ggplot() +
geom_point(mapping = aes(x = schedule_week, y = mean(spread_favorite)))
spread_scores_df %>% group_by(schedule_week) %>%
ggplot() +
geom_bar(mapping = aes(x = schedule_week, y = mean(spread_favorite)))
spread_scores_df %>% group_by(schedule_week) %>%
ggplot() +
geom_bar(mapping = aes(mean(spread_favorite)))
spread_scores_df %>% group_by(schedule_week) %>%
ggplot() +
geom_bar(mapping = aes(mean(spread_favorite))) +
facet_wrap(~ schedule_week)
spread_scores_df %>% group_by(schedule_week) %>%
ggplot() +
geom_point(mapping = aes(x = schedule_season,y = spread_favorite)) +
facet_wrap(~ schedule_week)
spread_scores_df %>% group_by(schedule_week) %>%
ggplot() +
geom_point(mapping = aes(x = schedule_season,y = spread_favorite), color = "#56B4E9", alpha = 0.25) +
facet_wrap(~ schedule_week)
spread_scores_df %>% fitler(schedule_week == "SuperBowl")
spread_scores_df %>% filter(schedule_week == "SuperBowl")
spread_scores_df %>% filter(schedule_week == 1)
spread_scores_df %>% filter(schedule_week == 18)
# Change SuperBowl to Superbowl and WildCard to Wildcard (2017 season)
socres_df$schedule_week <- filter("schedule_week" == "SuperBowl") %>%
mutate(schedule_week = "Superbowl")
# Change SuperBowl to Superbowl and WildCard to Wildcard (2017 season)
scores_df %>% filter(schedule_week == "SuperBowl") %>%
mutate(schedule_week = "Superbowl")
View(scores_df)
spread_scores_df %>% filter(schedule_week == "SuperBowl")
scores_df %>% filter(schedule_week == "SuperBowl")
# Change SuperBowl to Superbowl and WildCard to Wildcard (2017 season)
scores_df <- scores_df %>% filter(schedule_week == "SuperBowl") %>%
mutate(schedule_week = "Superbowl")
# Read in data.
scores_df <- read.csv("data:/spreadspoke_scores.csv")
# Change SuperBowl to Superbowl and WildCard to Wildcard (2017 season)
scores_df$schedule_week %>% filter(schedule_week == "SuperBowl") <- mutate(scores_df$schedule_week %>% filter(schedule_week == "SuperBowl") = "Superbowl")
# Change SuperBowl to Superbowl and WildCard to Wildcard (2017 season)
scores_df$schedule_week %>% filter(schedule_week == "SuperBowl") <- mutate(schedule_week = "Superbowl")
# Change SuperBowl to Superbowl and WildCard to Wildcard (2017 season)
scores_df$schedule_week %>% filter(schedule_week == "SuperBowl") <- scores_df$schedule_week %>% filter(schedule_week == "SuperBowl") %>% mutate(schedule_week = "Superbowl")
scores_df$schedule_week %>% filter(schedule_week == "SuperBowl")
# Read in data.
scores_df <- read.csv("data:/spreadspoke_scores.csv")
teams <- read.csv("data:/teamanno.csv")
# Reformat date
scores_df$schedule_date <- as.Date(scores_df$schedule_date, format = "%m/%d/%Y")
# Change SuperBowl to Superbowl and WildCard to Wildcard (2017 season)
scores_df$schedule_week %>% filter(schedule_week == "SuperBowl") <- scores_df$schedule_week %>% filter(schedule_week == "SuperBowl") %>% mutate(schedule_week = "Superbowl")
# Change SuperBowl to Superbowl and WildCard to Wildcard (2017 season)
scores_df %>% filter(schedule_week == "SuperBowl") <- scores_df %>% filter(schedule_week == "SuperBowl") %>% mutate(schedule_week = "Superbowl")
# Change SuperBowl to Superbowl and WildCard to Wildcard (2017 season)
scores_df %>% filter(schedule_week == "SuperBowl") <- scores_df %>% filter(schedule_week == "SuperBowl") %>% mutate(schedule_week = "Superbowl")
scores_df %>% filter(schedule_week == "SuperBowl")
scores_df %>% filter(schedule_week == "SuperBowl") %>% mutate(schedule_week = "Superbowl")
# Change SuperBowl to Superbowl and WildCard to Wildcard (2017 season)
scores_df %>% filter(schedule_week == "SuperBowl") <- scores_df %>%
filter(schedule_week == "SuperBowl") %>%
mutate(schedule_week = "Superbowl")
# Change SuperBowl to Superbowl and WildCard to Wildcard (2017 season)
scorse_df <- scores_df %>%
filter(schedule_week == "SuperBowl") %>%
mutate(schedule_week = "Superbowl")
spread_scores_df %>% filter(schedule_week == "SuperBowl")
scores_df %>% filter(schedule_week == "SuperBowl")
library(tidyverse)
# Read in data.
scores_df <- read.csv("data:/spreadspoke_scores.csv")
teams <- read.csv("data:/teamanno.csv")
# Reformat date
scores_df$schedule_date <- as.Date(scores_df$schedule_date, format = "%m/%d/%Y")
# Change SuperBowl to Superbowl and WildCard to Wildcard (2017 season)
scorse_df <- scores_df %>%
filter(schedule_week == "SuperBowl") %>%
mutate(schedule_week = "Superbowl")
# Add a new column to the dataframe where it tells us if the home team won/lost.
scores_df <- scores_df %>% mutate(home_win = (score_home > score_away))
# Proportion of home teams that won in each season.
prop_home_win <- scores_df %>%
group_by(schedule_season) %>%
filter(home_win == TRUE, .preserve = TRUE) %>%
summarise(prop = n()) %>%
mutate(prop_home_wins = prop / sum(prop))
# Create a dataframe with rows containing spread data.
spread_scores_df <- scores_df %>% filter(!is.na(spread_favorite))
# Average spread of each season.
avg_spreads <- spread_scores_df %>%
group_by(schedule_season) %>%
summarize(avg_spread = mean(spread_favorite))
# Average ou of each season.
avg_ous <- spread_scores_df %>%
group_by(schedule_season) %>%
summarise(avg_ou = mean(over_under_line, na.rm = TRUE))
# Join dataframes.
year_score_df <- left_join(prop_home_win, avg_spreads)
# Join dataframes.
year_score_df <- left_join(year_score_df, avg_ous)
# Filter for only superbowl data.
sb_spreads <- spread_scores_df %>%
filter(schedule_week == "Superbowl")
# Plot the average spread of favorite over the seasons.
theme_set(theme_grey())
ggplot(data = sb_spreads) +
geom_line(mapping = aes(x = schedule_season, y = spread_favorite), color = "skyblue4") +
xlab("Season") +
ylab("Avg. Spread") +
theme(text = element_text(size = 10,  family = "mono"))
# Favorite team for each game.
spread_scores_df <- mutate(spread_scores_df, team_favorite = NA)
for (i in 1:nrow(spread_scores_df)) {
if (spread_scores_df$team_favorite_id[i] == "PICK") {
spread_scores_df$team_favorite[i] <- "PICK"
} else {
team <- teams %>%
filter(Abbreviation == spread_scores_df$team_favorite_id[i]) %>%
select(Name)
spread_scores_df$team_favorite[i] <- team
}
}
# Team won for each game.
spread_scores_df <- mutate(spread_scores_df, team_win = NA)
for (i in 1:nrow(spread_scores_df)) {
if (spread_scores_df$home_win[i]) {
spread_scores_df$team_win[i] <- spread_scores_df$team_home[i]
} else {
spread_scores_df$team_win[i] <- spread_scores_df$team_away[i]
}
}
# spread_scores_df <- mutate(spread_scores_df, favorite_win = str_detect(team_win, str_split(team_favorite, " ")[[1]][length(str_split(team_favorite, " ")[[1]])]))
# Whether favorite team won or not.
spread_scores_df <- mutate(spread_scores_df, favorite_win = (team_win == team_favorite))
barplot(spread_scores_df$weather_detail)
spread_scores_df %>% group_by(schedule_week) %>%
ggplot() +
geom_point(mapping = aes(x = schedule_season,y = spread_favorite), color = "#56B4E9", alpha = 0.25) +
facet_wrap(~ schedule_week)
# Plot proportion home wins over the years.
# ggplot() +
#   geom_line(data = year_score_df, aes(x = schedule_season, y = prop_home_wins), color = "darkcyan") +
#   ggsave("homewins.png")
# Plot avg ou over the years.
# ggplot() +
#   geom_line(data = year_score_df, aes(x = schedule_season, y = avg_ou), color = "darkcyan") +
#   ggsave("ou.png")
# Plot avg line over the years.
# ggplot() +
#   geom_line(data = year_score_df, aes(x = schedule_season, y = avg_spread), color = "darkcyan") +
#   ggsave("avgline.png")
# Plot range of spreads for each week
# spread_scores_df %>%
#   filter(schedule_season == 2020) %>%
#   ggplot(aes(x = spread_favorite, xend = spread_favorite,
#              y = schedule_week, group = schedule_week)) +
#   geom_dumbbell(color="#a3c4dc", size=0.75, point.colour.l="#0e668b")
# Plots the spreads for each week different visual
# g <- spread_scores_df %>%
#   filter(schedule_season == 2020) %>%
#   arrange(schedule_date, decreasing = TRUE) %>%
#   ggplot(aes(schedule_week, spread_favorite))
# g + geom_tufteboxplot() +
#   theme(axis.text.x = element_text(angle=65, vjust=0.6))
spread_scores_df %>% group_by(schedule_week) %>%
ggplot() +
geom_point(mapping = aes(x = schedule_season,y = spread_favorite), color = "#56B4E9", alpha = 0.25) +
facet_wrap(~ schedule_week)
# Change SuperBowl to Superbowl and WildCard to Wildcard (2017 season)
scorse_df <- scores_df %>%
filter(schedule_week == "SuperBowl") %>%
mutate(schedule_week = "Superbowl")
scores_df %>% filter(schedule_week == "Superbowl")
scores_df %>% filter(schedule_week == "SuperBowl")
# Change SuperBowl to Superbowl and WildCard to Wildcard (2017 season)
scores_df <- scores_df %>%
filter(schedule_week == "SuperBowl") %>%
mutate(schedule_week = "Superbowl")
# Add a new column to the dataframe where it tells us if the home team won/lost.
scores_df <- scores_df %>% mutate(home_win = (score_home > score_away))
# Proportion of home teams that won in each season.
prop_home_win <- scores_df %>%
group_by(schedule_season) %>%
filter(home_win == TRUE, .preserve = TRUE) %>%
summarise(prop = n()) %>%
mutate(prop_home_wins = prop / sum(prop))
# Create a dataframe with rows containing spread data.
spread_scores_df <- scores_df %>% filter(!is.na(spread_favorite))
# Average spread of each season.
avg_spreads <- spread_scores_df %>%
group_by(schedule_season) %>%
summarize(avg_spread = mean(spread_favorite))
# Average ou of each season.
avg_ous <- spread_scores_df %>%
group_by(schedule_season) %>%
summarise(avg_ou = mean(over_under_line, na.rm = TRUE))
# Join dataframes.
year_score_df <- left_join(prop_home_win, avg_spreads)
# Join dataframes.
year_score_df <- left_join(year_score_df, avg_ous)
# Filter for only superbowl data.
sb_spreads <- spread_scores_df %>%
filter(schedule_week == "Superbowl")
# Plot the average spread of favorite over the seasons.
theme_set(theme_grey())
ggplot(data = sb_spreads) +
geom_line(mapping = aes(x = schedule_season, y = spread_favorite), color = "skyblue4") +
xlab("Season") +
ylab("Avg. Spread") +
theme(text = element_text(size = 10,  family = "mono"))
# Favorite team for each game.
spread_scores_df <- mutate(spread_scores_df, team_favorite = NA)
for (i in 1:nrow(spread_scores_df)) {
if (spread_scores_df$team_favorite_id[i] == "PICK") {
spread_scores_df$team_favorite[i] <- "PICK"
} else {
team <- teams %>%
filter(Abbreviation == spread_scores_df$team_favorite_id[i]) %>%
select(Name)
spread_scores_df$team_favorite[i] <- team
}
}
# Team won for each game.
spread_scores_df <- mutate(spread_scores_df, team_win = NA)
for (i in 1:nrow(spread_scores_df)) {
if (spread_scores_df$home_win[i]) {
spread_scores_df$team_win[i] <- spread_scores_df$team_home[i]
} else {
spread_scores_df$team_win[i] <- spread_scores_df$team_away[i]
}
}
# Whether favorite team won or not.
spread_scores_df <- mutate(spread_scores_df, favorite_win = (team_win == team_favorite))
barplot(spread_scores_df$weather_detail)
spread_scores_df %>% group_by(schedule_week) %>%
ggplot() +
geom_point(mapping = aes(x = schedule_season,y = spread_favorite), color = "#56B4E9", alpha = 0.25) +
facet_wrap(~ schedule_week)
spread_scores_df %>% group_by(schedule_week) %>%
ggplot() +
geom_point(mapping = aes(x = schedule_season,y = spread_favorite), color = "#56B4E9", alpha = 0.25) +
facet_wrap(~ schedule_week)
# Change SuperBowl to Superbowl and WildCard to Wildcard (2017 season)
scores_df <- scores_df %>%
filter(schedule_week == "SuperBowl") %>%
mutate(schedule_week = "Superbowl")
# Read in data.
scores_df <- read.csv("data:/spreadspoke_scores.csv")
# Reformat date
scores_df$schedule_date <- as.Date(scores_df$schedule_date, format = "%m/%d/%Y")
# Change SuperBowl to Superbowl and WildCard to Wildcard (2017 season)
scores_df <- scores_df %>%
filter(schedule_week == "SuperBowl") %>%
mutate(schedule_week = "Superbowl")
# Read in data.
scores_df <- read.csv("data:/spreadspoke_scores.csv")
# Reformat date
scores_df$schedule_date <- as.Date(scores_df$schedule_date, format = "%m/%d/%Y")
# Change SuperBowl to Superbowl and WildCard to Wildcard (2017 season)
scores_df[scores_df$schedule_date == "SuperBowl"] <- scores_df$schedule_date = "Superbowl"
scores_df[scores_df$schedule_date == "SuperBowl"]
# Change SuperBowl to Superbowl and WildCard to Wildcard (2017 season)
scores_df[schedule_date == "SuperBowl"] <- scores_df$schedule_date = "Superbowl"
# Change SuperBowl to Superbowl and WildCard to Wildcard (2017 season)
scores_df[scores_df$schedule_date == "SuperBowl"] <- scores_df$schedule_date = "Superbowl"
# Change SuperBowl to Superbowl and WildCard to Wildcard (2017 season)
scores_df[scores_df$schedule_date == "SuperBowl", schedule_date] <- "Superbowl"
# Change SuperBowl to Superbowl and WildCard to Wildcard (2017 season)
scores_df[scores_df$schedule_date == "SuperBowl", 'schedule_date'] <- "Superbowl"
# Change SuperBowl to Superbowl and WildCard to Wildcard (2017 season)
scores_df[scores_df$schedule_week == "SuperBowl", "schedule_week"] <- "Superbowl"
scores_df %>% filter(schedule_week == "SuperBowl")
library(tidyverse)
# Read in data.
scores_df <- read.csv("data:/spreadspoke_scores.csv")
teams <- read.csv("data:/teamanno.csv")
# Reformat date
scores_df$schedule_date <- as.Date(scores_df$schedule_date, format = "%m/%d/%Y")
# Change SuperBowl to Superbowl and WildCard to Wildcard (2017 season)
scores_df[scores_df$schedule_week == "SuperBowl", "schedule_week"] <- "Superbowl"
# Add a new column to the dataframe where it tells us if the home team won/lost.
scores_df <- scores_df %>% mutate(home_win = (score_home > score_away))
# Proportion of home teams that won in each season.
prop_home_win <- scores_df %>%
group_by(schedule_season) %>%
filter(home_win == TRUE, .preserve = TRUE) %>%
summarise(prop = n()) %>%
mutate(prop_home_wins = prop / sum(prop))
# Create a dataframe with rows containing spread data.
spread_scores_df <- scores_df %>% filter(!is.na(spread_favorite))
# Average spread of each season.
avg_spreads <- spread_scores_df %>%
group_by(schedule_season) %>%
summarize(avg_spread = mean(spread_favorite))
# Average ou of each season.
avg_ous <- spread_scores_df %>%
group_by(schedule_season) %>%
summarise(avg_ou = mean(over_under_line, na.rm = TRUE))
# Join dataframes.
year_score_df <- left_join(prop_home_win, avg_spreads)
# Join dataframes.
year_score_df <- left_join(year_score_df, avg_ous)
# Filter for only superbowl data.
sb_spreads <- spread_scores_df %>%
filter(schedule_week == "Superbowl")
# Plot the average spread of favorite over the seasons.
theme_set(theme_grey())
ggplot(data = sb_spreads) +
geom_line(mapping = aes(x = schedule_season, y = spread_favorite), color = "skyblue4") +
xlab("Season") +
ylab("Avg. Spread") +
theme(text = element_text(size = 10,  family = "mono"))
# Favorite team for each game.
spread_scores_df <- mutate(spread_scores_df, team_favorite = NA)
for (i in 1:nrow(spread_scores_df)) {
if (spread_scores_df$team_favorite_id[i] == "PICK") {
spread_scores_df$team_favorite[i] <- "PICK"
} else {
team <- teams %>%
filter(Abbreviation == spread_scores_df$team_favorite_id[i]) %>%
select(Name)
spread_scores_df$team_favorite[i] <- team
}
}
# Team won for each game.
spread_scores_df <- mutate(spread_scores_df, team_win = NA)
for (i in 1:nrow(spread_scores_df)) {
if (spread_scores_df$home_win[i]) {
spread_scores_df$team_win[i] <- spread_scores_df$team_home[i]
} else {
spread_scores_df$team_win[i] <- spread_scores_df$team_away[i]
}
}
# spread_scores_df <- mutate(spread_scores_df, favorite_win = str_detect(team_win, str_split(team_favorite, " ")[[1]][length(str_split(team_favorite, " ")[[1]])]))
# Whether favorite team won or not.
spread_scores_df <- mutate(spread_scores_df, favorite_win = (team_win == team_favorite))
barplot(spread_scores_df$weather_detail)
spread_scores_df %>% group_by(schedule_week) %>%
ggplot() +
geom_point(mapping = aes(x = schedule_season,y = spread_favorite), color = "#56B4E9", alpha = 0.25) +
facet_wrap(~ schedule_week)
# Plot proportion home wins over the years.
# ggplot() +
#   geom_line(data = year_score_df, aes(x = schedule_season, y = prop_home_wins), color = "darkcyan") +
#   ggsave("homewins.png")
# Plot avg ou over the years.
# ggplot() +
#   geom_line(data = year_score_df, aes(x = schedule_season, y = avg_ou), color = "darkcyan") +
#   ggsave("ou.png")
# Plot avg line over the years.
# ggplot() +
#   geom_line(data = year_score_df, aes(x = schedule_season, y = avg_spread), color = "darkcyan") +
#   ggsave("avgline.png")
# Plot range of spreads for each week
# spread_scores_df %>%
#   filter(schedule_season == 2020) %>%
#   ggplot(aes(x = spread_favorite, xend = spread_favorite,
#              y = schedule_week, group = schedule_week)) +
#   geom_dumbbell(color="#a3c4dc", size=0.75, point.colour.l="#0e668b")
# Plots the spreads for each week different visual
# g <- spread_scores_df %>%
#   filter(schedule_season == 2020) %>%
#   arrange(schedule_date, decreasing = TRUE) %>%
#   ggplot(aes(schedule_week, spread_favorite))
# g + geom_tufteboxplot() +
#   theme(axis.text.x = element_text(angle=65, vjust=0.6))
spread_scores_df %>% group_by(schedule_week) %>%
ggplot() +
geom_point(mapping = aes(x = schedule_season,y = spread_favorite), color = "#56B4E9", alpha = 0.25) +
facet_wrap(~ schedule_week)
# Change SuperBowl to Superbowl and WildCard to Wildcard (2017 season)
scores_df[scores_df$schedule_week == "SuperBowl", "schedule_week"] <- "Superbowl"
scores_df[scores_df$schedule_week == "WildCard", "schedule_week"] <- "Wildcard"
# Add a new column to the dataframe where it tells us if the home team won/lost.
scores_df <- scores_df %>% mutate(home_win = (score_home > score_away))
# Create a dataframe with rows containing spread data.
spread_scores_df <- scores_df %>% filter(!is.na(spread_favorite))
spread_scores_df %>% group_by(schedule_week) %>%
ggplot() +
geom_point(mapping = aes(x = schedule_season,y = spread_favorite), color = "#56B4E9", alpha = 0.25) +
facet_wrap(~ schedule_week)
spread_scores_df %>% group_by(schedule_week) %>%
ggplot() +
geom_point(mapping = aes(x = schedule_season,y = spread_favorite), color = "#56B4E9", alpha = 0.25) +
facet_wrap(~ schedule_week) +
ggsave("spreadweekyears.png")
