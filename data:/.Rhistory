nrow()
num_county_diff <- all_totals %>%
filter(cases != county_total) %>%
nrow()
counties %>%
mutate(new_cases = cases - lag(cases, n = 1, default = 0))
counties %>% group_by(state) %>%
mutate(new_cases = cases - lag(cases, n = 1, default = 0))
counties %>% group_by(state) %>%
mutate(new_cases = cases - lag(cases, n = 1, default = 0)) %>% tail()
counties %>% group_by(state) %>% group_by(date) %>% summarize(cases = sum(cases))
counties %>% group_by(state) %>% group_by(date) %>% summarize(state = state ,cases = sum(cases))
counties %>% group_by(state) %>% group_by(date) %>% summarize(state = state ,cases = sum(cases), .groups = "drop")
counties %>% group_by(date) %>% group_by(state) %>% summarize(state = state ,cases = sum(cases), .groups = "drop")
counties %>% group_by(date) %>% group_by(state) %>% summarize(state = state ,cases = sum(cases), .groups = "drop")
counties %>% group_by(state) %>% summarize(state = state ,cases = sum(cases), .groups = "drop")
counties %>% group_by(state)
counties %>% group_by(state) %>% group_by(date)
counties %>% group_by(state) %>% group_by(date) %>% filter(date == '2020-01-21')
counties %>% group_by(state) %>% group_by(date) %>% filter(date == '2020-01-29')
counties %>% group_by(state) %>%  filter(date == '2020-01-29')
counties %>% group_by(c(state,date))
counties %>% group_by(state,date)
counties %>% group_by(state,date) %>% summarise(state = state, date = date, county_totals = sum(cases), .groups = "drop")
counties %>% group_by(state,date) %>% summarise(state = state, date = date, county_totals = sum(cases), .groups = "drop") %>% filter(county == "Snohomish")
counties %>% group_by(state,date) %>% summarise(state = state, date = date, county_totals = sum(cases), .groups = "drop") %>% filter(state == "Washington")
counties %>% group_by(state,date) %>% summarise(state = state, date = date, county_totals = sum(cases))
counties %>% group_by(state,date) %>% summarise(state = state, date = date, county_totals = sum(cases))  %>% group_by(date)
counties %>% group_by(state,date) %>% summarise(state = state, date = date, county_totals = sum(cases), .groups = "date")
counties %>% group_by(state,date) %>% summarise(state = state, date = date, county_totals = sum(cases), .groups = "keep")
counties %>% group_by(date,state) %>% summarise(state = state, date = date, county_totals = sum(cases), .groups = "keep")
counties %>% group_by(date,state) %>% summarise(state = state, date = date, county_totals = sum(cases), .groups = "drop")
sum_county_to_state <- counties %>%
group_by(date,state) %>%
summarise(state = state, date = date, county_totals = sum(cases), .groups = "drop")
sum_county_to_state <- counties %>%
group_by(state,date) %>%
summarise(state = state, date = date, county_totals = sum(cases), .groups = "drop")
sum_county_to_state %>% group_by(date)
sum_county_to_state <- counties %>%
group_by(state,date) %>%
summarise(state = state, county_totals = sum(cases), .groups = "drop")
sum_county_to_state <- counties %>%
group_by(state,date) %>%
summarise(state = state, county_totals = sum(cases), .groups = "drop")
sum_county_to_state <- counties %>%
group_by(state,date) %>%
summarise(county_totals = sum(cases), .groups = "drop")
View(sum_county_to_state)
sum_county_to_state %>% filter(state == "Washington")
sum_county_to_state %>% filter(state == "California")
joined_states <- left_join(sum_county_to_state, states, by = "date")
View(joined_states)
has_discrepancy <- joined_states %>%
filter(county_totals != cases)
View(has_discrepancy)
joined_states <- left_join(sum_county_to_state, states, by = c("date", "state"))
View(joined_states)
has_discrepancy <- joined_states %>%
filter(county_totals != cases)
View(has_discrepancy)
state_highest_difference <- has_discrepancy %>%
mutate(diff = abs(county_totals - cases)) %>%
filter(diff == max(diff)) %>%
pull(state)
View(num_county_dff)
View(joined_states)
sum_county_to_state %>% group_by(date,state)
sum_county_to_state %>% group_by(date)
sum_county_to_state %>% group_by(date)
sum_county_to_state %>% group_by(state)
states %>% filter(cases == 0)
states %>% group_by(state) %>% summarise(state = n())
states %>% group_by(state) %>% summarise(n())
states %>% group_by(state) %>% summarise(n()) %>% filter(state == "Washington")
View(date_most_deaths)
worst_date_state <- function(state_specific) {
states %>%
filter(state = state_specific) %>%
filter(cases = max(cases)) %>%
pull(date)
}
wa_worst_date <- worst_date_state("Washington")
worst_date_state <- function(state_specific) {
states %>%
filter(state == state_specific) %>%
filter(cases == max(cases)) %>%
pull(date)
}
wa_worst_date <- worst_date_state("Washington")
View(national)
worst_date_state <- function(state_specific) {
states %>%
mutate(new_deaths = deaths - lag(deaths, n = 1, default = 0))
filter(state == state_specific) %>%
filter(cases == max(deaths)) %>%
pull(date)
}
wa_worst_date <- worst_date_state("Washington")
worst_date_state <- function(state_specific) {
states %>%
mutate(new_deaths = deaths - lag(deaths, n = 1, default = 0)) %>%
filter(state == state_specific) %>%
filter(cases == max(deaths)) %>%
pull(date)
}
wa_worst_date <- worst_date_state("Washington")
worst_date_state <- function(state_specific) {
states %>%
filter(state == state_specific) %>%
mutate(new_deaths = deaths - lag(deaths, n = 1, default = 0)) %>%
filter(new_deaths == max(new_deaths)) %>%
pull(date)
}
wa_worst_date <- worst_date_state("Washington")
states %>% filter(state == "Washington")
states %>%
filter(state == "Washington") %>%
mutate(new_deaths = deaths - lag(deaths, n = 1, default = 0))
states %>%
filter(state == state_specific) %>%
mutate(new_deaths = deaths - lag(deaths, n = 1, default = 0)) %>%
filter(new_deaths == max(new_deaths))
states %>%
filter(state == "Washington") %>%
mutate(new_deaths = deaths - lag(deaths, n = 1, default = 0)) %>%
filter(new_deaths == max(new_deaths))
library(tidyverse)
View(highest_in_each_state)
lowest_in_each_state <- counties %>%
filter(date == date[obs_counties]) %>%
group_by(state) %>%
filter(deaths == min(deaths)) %>%
select(location)
View(lowest_in_each_state)
highest_in_each_state <- counties %>%
group_by(state) %>%
filter(cases == max(cases)) %>%
select(location) %>%
summarize(county = county, state = state)
highest_in_each_state <- counties %>%
group_by(state) %>%
filter(cases == max(cases)) %>%
summarize(county = county, state = state)
View(highest_in_each_state)
lowest_in_each_state <- counties %>%
filter(date == date[obs_counties]) %>%
group_by(state) %>%
filter(deaths == min(deaths)) %>%
summarize(county = county, state = state)
highest_in_each_state <- counties %>%
group_by(state) %>%
filter(cases == max(cases)) %>%
select(location)
highest_in_each_state <- counties %>%
group_by(state) %>%
filter(cases == max(cases)) %>%
select(county)
lowest_in_each_state <- counties %>%
filter(date == date[obs_counties]) %>%
group_by(state) %>%
filter(deaths == min(deaths)) %>%
select(county)
state_highest_ratio <- states %>%
filter(date == date[obs_states])
state_highest_ratio <- states %>%
filter(date == date[obs_states]) %>%
mutate(dc_ratio = deaths/cases) %>%
filter(dc_ratio == max(dc_ratio)) %>%
select(state)
View(state_highest_ratio)
states %>%
filter(date == date[obs_states]) %>%
mutate(dc_ratio = deaths/cases) %>%
filter(dc_ratio == max(dc_ratio))
states %>%
filter(date == date[obs_states]) %>%
mutate(dc_ratio = deaths/cases)
state_highest_cases <- states %>%
filter(cases == max(cases)) %>%
pull(state)
num_highest_state <- states %>%
filter(cases == max(cases)) %>%
pull(cases)
state_highest_ratio <-
filter(
filter(
states, date == date[obs_states]),
cases == max(cases)) %>%
pull(state)
state_lowest_cases <-
filter(
filter(
states, date == date[obs_states]),
cases == min(cases)) %>%
pull(state)
county_highest_cases <- counties %>%
filter(cases == max(cases)) %>%
pull(county)
num_highest_cases_count <- counties %>%
filter(cases == max(cases)) %>%
pull(cases)
location_most_deaths <- counties %>%
filter(deaths == max(deaths, na.rm = TRUE)) %>%
pull(location)
date_most_cases <- national %>%
filter(new_cases == max(new_cases)) %>%
pull(date)
date_most_deaths <- national %>%
filter(new_deaths == max(new_deaths)) %>%
pull(date)
most_deaths <- national %>%
filter(new_deaths == max(new_deaths)) %>%
pull(new_deaths)
new_cases_plot <- plot(national$new_cases)
new_deaths_plot <- plot(national$new_deaths)
highest_in_each_state <- counties %>%
group_by(state) %>%
filter(cases == max(cases)) %>%
select(county)
highest_in_wa <- select(
filter(
filter(counties ,state == "Washington"),
cases == max(cases)),
location)
lowest_in_each_state <- counties %>%
filter(date == date[obs_counties]) %>%
group_by(state) %>%
filter(deaths == min(deaths)) %>%
select(county)
prop_no_deaths <- counties %>%
filter(date == date[obs_counties]) %>%
group_by(state) %>%
filter(deaths == 0, .preserve = TRUE) %>%
summarise(prop = n()) %>%
mutate(prop = prop / sum(prop))
wa_prop_no_deaths <- prop_no_deaths  %>%
filter(state == 'Washington') %>%
pull(prop)
state_by_day <- states %>%
group_by(date) %>%
summarise(state_total = sum(cases))
county_by_day <- counties %>%
group_by(date) %>%
summarise(county_total = sum(cases))
totals_by_day <- left_join(state_by_day,county_by_day, by = "date")
all_totals <- left_join(national, totals_by_day, by = "date")
num_state_diff <- all_totals %>%
filter(cases != state_total) %>%
nrow()
num_county_diff <- all_totals %>%
filter(cases != county_total) %>%
nrow()
sum_county_to_state <- counties %>%
group_by(state,date) %>%
summarise(county_totals = sum(cases), .groups = "drop")
joined_states <- left_join(sum_county_to_state, states, by = c("date", "state"))
has_discrepancy <- joined_states %>%
filter(county_totals != cases)
state_highest_difference <- has_discrepancy %>%
mutate(diff = abs(county_totals - cases)) %>%
filter(diff == max(diff)) %>%
pull(state)
worst_month <- mutate(national, month_year = str_c(months(as.Date.character(date)),
" " , str_sub(date, 1, 4))) %>%
group_by(month_year) %>%
summarize(month_deaths = sum(new_deaths)) %>%
filter(month_deaths == max(month_deaths)) %>%
pull(month_year)
worst_date_state <- function(state_specific) {
states %>%
filter(state == state_specific) %>%
mutate(new_deaths = deaths - lag(deaths, n = 1, default = 0)) %>%
filter(new_deaths == max(new_deaths)) %>%
pull(date)
}
wa_worst_date <- worst_date_state("Washington")
worst_county_state <- function(state_specific) {
counties %>%
filter(state == state_specific) %>%
filter(cases == max(cases)) %>%
pull(county)
}
wa_worst_county <- worst_county_state("Washington")
library(tidyverse)
worst_county_state <- function(state_specific) {
counties %>%
filter(state == state_specific) %>%
filter(cases == max(cases)) %>%
pull(county)
}
wa_worst_county <- worst_county_state("Washington")
lintr::lint("analysis.R")
library(styler)
style_file("analysis.R")
install.packages("styler")
library(styler)
style_file("analysis.R")
lintr::lint("analysis.R")
lintr::lint("analysis.R")
lintr::lint("analysis.R")
lintr::lint("analysis.R")
lintr::lint("analysis.R")
library(tidyverse)
read.csv("data:/kaggledata/spreadspoke_scores.csv")
library(readr)
spreadspoke_scores <- read_csv("~/Desktop/INFO201/ac-group3-final-project/data:/kaggledata/spreadspoke_scores.csv")
View(spreadspoke_scores)
data <- spreadspoke_scores
data <- spreadspoke_scores
data <- data %>% mutate(home_win = (score_home > score_away))
View(data)
home_wins_season <- data %>%
group_by(schedule_season) %>%
mutate(prop = n()) %>%
filter(home_win == TRUE) %>%
summarise(prop = n() /prop)
View(home_wins_season)
home_wins_season <- data %>%
group_by(schedule_season) %>%
filter(home_win == TRUE, .preserve = TRUE) %>%
summarise(prop = n()) %>%
mutate(prop = prop / sum(prop))
View(home_wins_season)
data %>% filter(schedule_season == 2020)
2020 <- data %>% filter(schedule_season == 2020)
season_2020 <- data %>% filter(schedule_season == 2020)
tail(season_2020)
getwd()
setwd("~/desktop/info201/ac-group3-final-project")
load("spreadspoke_scores.csv")
setwd(":/wd")
setwd(":data")
setwd("/:data")
setwd("/data:")
setwd("~/desktop/info201/ac-group3-final-project/data:")
getwd()
load("spreadspoke_scores.csv")
ls
load("spreadspoke_scores.csv")
data <- read.csv("spreadspoke_scores.csv")
data <- data %>% mutate(home_win = (score_home > score_away))
home_wins_season <- data %>%
group_by(schedule_season) %>%
filter(home_win == TRUE, .preserve = TRUE) %>%
summarise(prop = n()) %>%
mutate(prop = prop / sum(prop))
library(tidyverse)
data <- read.csv("spreadspoke_scores.csv")
data <- data %>% mutate(home_win = (score_home > score_away))
home_wins_season <- data %>%
group_by(schedule_season) %>%
filter(home_win == TRUE, .preserve = TRUE) %>%
summarise(prop = n()) %>%
mutate(prop = prop / sum(prop))
View(home_wins_season)
View(data)
library(tidyverse)
scores_df <- read.csv("spreadspoke_scores.csv")
scores_df <- scores_df %>% mutate(home_win = (score_home > score_away))
home_wins_season <- scores_df %>%
group_by(schedule_season) %>%
filter(home_win == TRUE, .preserve = TRUE) %>%
summarise(prop = n()) %>%
mutate(prop = prop / sum(prop))
View(scores_df)
scores_df %>% filter(spread_favorite != na)
scores_df %>% filter(spread_favorite != NA)
scores_df %>% filter(is.na(spread_favorite))
has_spread <- scores_df %>% filter(is.na(spread_favorite))
View(has_spread)
has_spread <- scores_df %>% filter(!is.na(spread_favorite))
library(tidyverse)
scores_df <- read.csv("spreadspoke_scores.csv")
scores_df <- scores_df %>% mutate(home_win = (score_home > score_away))
home_wins_season <- scores_df %>%
group_by(schedule_season) %>%
filter(home_win == TRUE, .preserve = TRUE) %>%
summarise(prop = n()) %>%
mutate(prop = prop / sum(prop))
spread_scores_df <- scores_df %>% filter(!is.na(spread_favorite))
View(spread_scores_df)
sb_spreads <- spread_scores_df %>%
filter(schedule_week == "Superbowl")
View(sb_spreads)
ggplot(data = sb_spreads) +
geom_point(mapping = aes(x = schedule_season, y = spread_favorite))
ggplot(data = sb_spreads) +
geom_line(mapping = aes(x = schedule_season, y = spread_favorite))
sb_spreads_plot <- ggplot(data = sb_spreads) +
geom_line(mapping = aes(x = schedule_season, y = spread_favorite))
View(sb_spreads_plot)
library(tidyverse)
scores_df <- read.csv("spreadspoke_scores.csv")
scores_df <- scores_df %>% mutate(home_win = (score_home > score_away))
score_year_df <- scores_df %>%
group_by(schedule_season) %>%
filter(home_win == TRUE, .preserve = TRUE) %>%
summarise(prop = n()) %>%
mutate(prop = prop / sum(prop))
spread_scores_df <- scores_df %>% filter(!is.na(spread_favorite))
sb_spreads <- spread_scores_df %>%
filter(schedule_week == "Superbowl")
ggplot(data = sb_spreads) +
geom_line(mapping = aes(x = schedule_season, y = spread_favorite))
View(score_year_df)
library(tidyverse)
scores_df <- read.csv("spreadspoke_scores.csv")
scores_df <- scores_df %>% mutate(home_win = (score_home > score_away))
score_year_df <- scores_df %>%
group_by(schedule_season) %>%
filter(home_win == TRUE, .preserve = TRUE) %>%
summarise(prop = n()) %>%
mutate(prop = prop / sum(prop))
spread_scores_df <- scores_df %>% filter(!is.na(spread_favorite))
spread_scores_df <- group_by(schedule_season) %>%
mutate(score_year_df, mean(spread_favorite))
sb_spreads <- spread_scores_df %>%
filter(schedule_week == "Superbowl")
ggplot(data = sb_spreads) +
geom_line(mapping = aes(x = schedule_season, y = spread_favorite))
spread_scores_df.columns
spread_scores_df.columns()
spread_scores_df$schedule_season
spread_scores_df <- group_by(schedule_season) %>%
mutate(score_year_df, mean(spread_favorite))
avg_spreads <- spread_scores %>%
group_by(schedule_season) %>%
mutate(score_year_df, mean(spread_favorite))
avg_spreads <- spread_scores_df %>%
group_by(schedule_season) %>%
mutate(score_year_df, mean(spread_favorite))
avg_spreads <- spread_scores_df %>%
group_by(schedule_season) %>%
summarize(schedule_season, mean(spread_favorite))
View(avg_spreads)
avg_spreads <- spread_scores_df %>%
group_by(schedule_season) %>%
summarize(schedule_season = mean(spread_favorite))
avg_spreads <- spread_scores_df %>%
group_by(schedule_season) %>%
summarize(mean(spread_favorite))
library(tidyverse)
scores_df <- read.csv("spreadspoke_scores.csv")
scores_df <- scores_df %>% mutate(home_win = (score_home > score_away))
prop_home_win <- scores_df %>%
group_by(schedule_season) %>%
filter(home_win == TRUE, .preserve = TRUE) %>%
summarise(prop = n()) %>%
mutate(prop = prop / sum(prop))
spread_scores_df <- scores_df %>% filter(!is.na(spread_favorite))
avg_spreads <- spread_scores_df %>%
group_by(schedule_season) %>%
summarize(mean(spread_favorite))
sb_spreads <- spread_scores_df %>%
filter(schedule_week == "Superbowl")
ggplot(data = sb_spreads) +
geom_line(mapping = aes(x = schedule_season, y = spread_favorite))
year_score_df <- left_join(prop_home_win, avg_spreads)
View(year_score_df)
avg_spreads <- spread_scores_df %>%
group_by(schedule_season) %>%
summarize(avg_spread = mean(spread_favorite))
year_score_df <- left_join(prop_home_win, avg_spreads)
ggplot(data = year_score_df) +
geom_line(mapping = aes(x = schedule_season, y = prop)) +
geom_line(mapping = aes(x = schedule_season, y = avg_spreads))
ggplot(data = year_score_df) +
geom_line(mapping = aes(x = schedule_season, y = c(prop, avg_spreads)))
ggplot() +
geom_line(data = year_score_df, aes(x = schedule_season, y = prop), color = "snow3") +
geom_line(data = year_score_df, aes(x = schedule_season, y = avg_spreads), color = "snow4")
p <- ggplot() +
geom_line(data = year_score_df, aes(x = schedule_season, y = prop), color = "snow3") +
geom_line(data = year_score_df, aes(x = schedule_season, y = avg_spreads), color = "snow4")
print(p)
gplot() +
geom_line(data = year_score_df, aes(x = schedule_season, y = prop), color = "snow3")
ggplot() +
geom_line(data = year_score_df, aes(x = schedule_season, y = prop), color = "snow3")
ggplot() +
geom_line(data = year_score_df, aes(x = schedule_season, y = prop), color = "cyan")
ggplot() +
geom_line(data = year_score_df, aes(x = schedule_season, y = prop), color = "cyan4")
ggplot() +
geom_line(data = year_score_df, aes(x = schedule_season, y = prop), color = "darkcyan")
ggplot() +
geom_line(data = year_score_df, aes(x = schedule_season, y = prop), color = "darkcyan") +
ggsave("homewins")
library(tidyverse)
scores_df <- read.csv("spreadspoke_scores.csv")
scores_df <- scores_df %>% mutate(home_win = (score_home > score_away))
prop_home_win <- scores_df %>%
group_by(schedule_season) %>%
filter(home_win == TRUE, .preserve = TRUE) %>%
summarise(prop = n()) %>%
mutate(prop_home_wins = prop / sum(prop))
spread_scores_df <- scores_df %>% filter(!is.na(spread_favorite))
avg_spreads <- spread_scores_df %>%
group_by(schedule_season) %>%
summarize(avg_spread = mean(spread_favorite))
year_score_df <- left_join(prop_home_win, avg_spreads)
sb_spreads <- spread_scores_df %>%
filter(schedule_week == "Superbowl")
ggplot(data = sb_spreads) +
geom_line(mapping = aes(x = schedule_season, y = spread_favorite))
ggplot() +
geom_line(data = year_score_df, aes(x = schedule_season, y = prop), color = "darkcyan") +
ggsave("homewins")
ggplot() +
geom_line(data = year_score_df, aes(x = schedule_season, y = prop), color = "darkcyan") +
ggsave("homewins.png")
