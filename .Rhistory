group_by(state) %>%
filter(deaths == min(deaths)) %>%
select(location)
View(lowest_in_each_state)
highest_in_each_state <- counties %>%
group_by(state) %>%
filter(cases == max(cases)) %>%
select(location) %>%
summarize(county = county, state = state)
highest_in_each_state <- counties %>%
group_by(state) %>%
filter(cases == max(cases)) %>%
summarize(county = county, state = state)
View(highest_in_each_state)
lowest_in_each_state <- counties %>%
filter(date == date[obs_counties]) %>%
group_by(state) %>%
filter(deaths == min(deaths)) %>%
summarize(county = county, state = state)
highest_in_each_state <- counties %>%
group_by(state) %>%
filter(cases == max(cases)) %>%
select(location)
highest_in_each_state <- counties %>%
group_by(state) %>%
filter(cases == max(cases)) %>%
select(county)
lowest_in_each_state <- counties %>%
filter(date == date[obs_counties]) %>%
group_by(state) %>%
filter(deaths == min(deaths)) %>%
select(county)
state_highest_ratio <- states %>%
filter(date == date[obs_states])
state_highest_ratio <- states %>%
filter(date == date[obs_states]) %>%
mutate(dc_ratio = deaths/cases) %>%
filter(dc_ratio == max(dc_ratio)) %>%
select(state)
View(state_highest_ratio)
states %>%
filter(date == date[obs_states]) %>%
mutate(dc_ratio = deaths/cases) %>%
filter(dc_ratio == max(dc_ratio))
states %>%
filter(date == date[obs_states]) %>%
mutate(dc_ratio = deaths/cases)
state_highest_cases <- states %>%
filter(cases == max(cases)) %>%
pull(state)
num_highest_state <- states %>%
filter(cases == max(cases)) %>%
pull(cases)
state_highest_ratio <-
filter(
filter(
states, date == date[obs_states]),
cases == max(cases)) %>%
pull(state)
state_lowest_cases <-
filter(
filter(
states, date == date[obs_states]),
cases == min(cases)) %>%
pull(state)
county_highest_cases <- counties %>%
filter(cases == max(cases)) %>%
pull(county)
num_highest_cases_count <- counties %>%
filter(cases == max(cases)) %>%
pull(cases)
location_most_deaths <- counties %>%
filter(deaths == max(deaths, na.rm = TRUE)) %>%
pull(location)
date_most_cases <- national %>%
filter(new_cases == max(new_cases)) %>%
pull(date)
date_most_deaths <- national %>%
filter(new_deaths == max(new_deaths)) %>%
pull(date)
most_deaths <- national %>%
filter(new_deaths == max(new_deaths)) %>%
pull(new_deaths)
new_cases_plot <- plot(national$new_cases)
new_deaths_plot <- plot(national$new_deaths)
highest_in_each_state <- counties %>%
group_by(state) %>%
filter(cases == max(cases)) %>%
select(county)
highest_in_wa <- select(
filter(
filter(counties ,state == "Washington"),
cases == max(cases)),
location)
lowest_in_each_state <- counties %>%
filter(date == date[obs_counties]) %>%
group_by(state) %>%
filter(deaths == min(deaths)) %>%
select(county)
prop_no_deaths <- counties %>%
filter(date == date[obs_counties]) %>%
group_by(state) %>%
filter(deaths == 0, .preserve = TRUE) %>%
summarise(prop = n()) %>%
mutate(prop = prop / sum(prop))
wa_prop_no_deaths <- prop_no_deaths  %>%
filter(state == 'Washington') %>%
pull(prop)
state_by_day <- states %>%
group_by(date) %>%
summarise(state_total = sum(cases))
county_by_day <- counties %>%
group_by(date) %>%
summarise(county_total = sum(cases))
totals_by_day <- left_join(state_by_day,county_by_day, by = "date")
all_totals <- left_join(national, totals_by_day, by = "date")
num_state_diff <- all_totals %>%
filter(cases != state_total) %>%
nrow()
num_county_diff <- all_totals %>%
filter(cases != county_total) %>%
nrow()
sum_county_to_state <- counties %>%
group_by(state,date) %>%
summarise(county_totals = sum(cases), .groups = "drop")
joined_states <- left_join(sum_county_to_state, states, by = c("date", "state"))
has_discrepancy <- joined_states %>%
filter(county_totals != cases)
state_highest_difference <- has_discrepancy %>%
mutate(diff = abs(county_totals - cases)) %>%
filter(diff == max(diff)) %>%
pull(state)
worst_month <- mutate(national, month_year = str_c(months(as.Date.character(date)),
" " , str_sub(date, 1, 4))) %>%
group_by(month_year) %>%
summarize(month_deaths = sum(new_deaths)) %>%
filter(month_deaths == max(month_deaths)) %>%
pull(month_year)
worst_date_state <- function(state_specific) {
states %>%
filter(state == state_specific) %>%
mutate(new_deaths = deaths - lag(deaths, n = 1, default = 0)) %>%
filter(new_deaths == max(new_deaths)) %>%
pull(date)
}
wa_worst_date <- worst_date_state("Washington")
shiny::runApp('~/Desktop/INFO201/ac-group3-final-project/shiny:')
library(tidyverse)
library(shiny)
library(ggplot2)
library(plotly)
library(viridis)
library(hrbrthemes)
library(gtools)
runApp('~/Desktop/INFO201/ac-group3-final-project/shiny:')
runApp('~/Desktop/INFO201/a4-klobby19')
# Make intro page.
page_one <- tabPanel(
"Introduction",
titlePanel("Introduction"),
sidebarLayout(
position = "right",
# Panel for total CO2 emission plot.
sidebarPanel(
plotlyOutput("plotintro"),
),
# Main introduction paragraph.
mainPanel(
p(
"Climate Change is an important issue that affects everyone around us. From rising sea levels to radical weather changes, real change has been affecting some of us around the world. Thus, it is crucial to understand what it is and why it is happening, so we can mitigate further damage. To add to that, it is commonly known to the public that CO2 is a driving force of climate change. So, for this analysis, I will be primarily focusing on the variables that are used for energy production. These variables being: ",
code("`gas_co2`, `oil_co2`, `coal_co2`, `gas_co2_per_capita`, `oil_co2_per_capita`, `coal_co2_per_capita`, and `country`"), " to see CO2 emissions may differ among different continents. I chose to stick to a year interval where data was most prevelant, and that turned out to be every year since 1950. Thus, in my summary information and visual representations, I used data from 1950-2019."
),
br(),
textOutput("summarytext") # Summary information Paragraph.
)
)
)
# Make visuals page.
page_two <- tabPanel(
"Interactive Visuals",
titlePanel("Interactive Visuals"),
p(" "),
# User input panel.
sidebarLayout(
sidebarPanel(
continent_checkbox,
y_input
),
# Plots and explanation of plots.
mainPanel(
splitLayout(cellWidths = c("50%", "50%"), plotlyOutput("plot1"), plotlyOutput("plot1cap")),
p("From these plots we can see that Asia's CO2 emission started to outshadow all other continents in the early 2000s. We can also see that Asia's CO2 emission from coal production increased at an exponential rate in the 2000s, whilst North America and Europe went on a decline. Overall, we can see that more developed nations have been the culprit for emitting the majority of CO2 for the past 60-70 years. However, as stated above, Asia has taken over both North America and Europe as the continent emitting the most CO2 whilst still lagging behind when looking at the per capita numbers.")
)
)
)
# Selection menu for y variable.
y_input <- selectInput(
inputId = "y_var",
choices = c("Gas", "Coal", "Oil"),
label = "CO2 Emissions From"
)
# Checkbox menu for continents.
continent_checkbox <- checkboxGroupInput(
inputId = "continent_checkbox",
choices = unique(continent$country),
selected = c("Africa", "Asia", "Europe", "North America", "South America"),
label = "Continent"
)
# Add everything together.
my_ui <- fluidPage(
navbarPage(
"Climate Change Analysis",
page_one,
page_two
)
)
# Make intro page.
page_one <- tabPanel(
"Introduction",
titlePanel("Introduction"),
sidebarLayout(
position = "right",
# Panel for total CO2 emission plot.
sidebarPanel(
plotlyOutput("plotintro"),
),
# Main introduction paragraph.
mainPanel(
p(
"Climate Change is an important issue that affects everyone around us. From rising sea levels to radical weather changes, real change has been affecting some of us around the world. Thus, it is crucial to understand what it is and why it is happening, so we can mitigate further damage. To add to that, it is commonly known to the public that CO2 is a driving force of climate change. So, for this analysis, I will be primarily focusing on the variables that are used for energy production. These variables being: ",
code("`gas_co2`, `oil_co2`, `coal_co2`, `gas_co2_per_capita`, `oil_co2_per_capita`, `coal_co2_per_capita`, and `country`"), " to see CO2 emissions may differ among different continents. I chose to stick to a year interval where data was most prevelant, and that turned out to be every year since 1950. Thus, in my summary information and visual representations, I used data from 1950-2019."
),
br(),
textOutput("summarytext") # Summary information Paragraph.
)
)
)
# Make visuals page.
page_two <- tabPanel(
"Interactive Visuals",
titlePanel("Interactive Visuals"),
p(" "),
# User input panel.
sidebarLayout(
sidebarPanel(
continent_checkbox,
y_input
),
# Plots and explanation of plots.
mainPanel(
splitLayout(cellWidths = c("50%", "50%"), plotlyOutput("plot1"), plotlyOutput("plot1cap")),
p("From these plots we can see that Asia's CO2 emission started to outshadow all other continents in the early 2000s. We can also see that Asia's CO2 emission from coal production increased at an exponential rate in the 2000s, whilst North America and Europe went on a decline. Overall, we can see that more developed nations have been the culprit for emitting the majority of CO2 for the past 60-70 years. However, as stated above, Asia has taken over both North America and Europe as the continent emitting the most CO2 whilst still lagging behind when looking at the per capita numbers.")
)
)
)
# Selection menu for y variable.
y_input <- selectInput(
inputId = "y_var",
choices = c("Gas", "Coal", "Oil"),
label = "CO2 Emissions From"
)
# Checkbox menu for continents.
continent_checkbox <- checkboxGroupInput(
inputId = "continent_checkbox",
choices = unique(continent$country),
selected = c("Africa", "Asia", "Europe", "North America", "South America"),
label = "Continent"
)
# Add everything together.
my_ui <- fluidPage(
navbarPage(
"Climate Change Analysis",
page_one,
page_two
)
)
runApp('~/Desktop/INFO201/a4-klobby19')
runApp('~/Desktop/INFO201/a4-klobby19')
runApp('~/Desktop/INFO201/a4-klobby19')
runApp('~/Desktop/INFO201/ac-group3-final-project/shiny:')
runApp('~/Desktop/INFO201/ac-group3-final-project/shiny:')
page_one <- tabPanel(
"Introduction",
titlePanel(icon("fa-info-circle"),"Introduction"),
mainPanel(
p("intro stuff"),
)
)
runApp('~/Desktop/INFO201/ac-group3-final-project/shiny:')
runApp('~/Desktop/INFO201/ac-group3-final-project/shiny:')
page_five <- tabPanel(
"Finishing Thoughts",
titlePanel("Finishing Thoughts")
)
runApp('~/Desktop/INFO201/ac-group3-final-project/shiny:')
runApp('~/Desktop/INFO201/ac-group3-final-project/shiny:')
numeric("13")
integer("13")
double("13")
as.double("13")
runApp('~/Desktop/INFO201/ac-group3-final-project/shiny:')
runApp('~/Desktop/INFO201/ac-group3-final-project/shiny:')
install.packages("shinyWidgets")
library(shinyWidgets)
runApp('~/Desktop/INFO201/ac-group3-final-project/shiny:')
runApp('~/Desktop/INFO201/ac-group3-final-project/shiny:')
runApp('~/Desktop/INFO201/ac-group3-final-project/shiny:')
runApp('~/Desktop/INFO201/ac-group3-final-project/shiny:')
runApp('~/Desktop/INFO201/ac-group3-final-project/shiny:')
runApp('~/Desktop/INFO201/ac-group3-final-project/shiny:')
scores_df %>%
filter(schedule_season != 2020) %>%
group_by(schedule_season, spread_favorite) %>%
summarize(count = n())
scores_df <- read.csv("../data:/scoresspread.csv")
setwd("~/Desktop/INFO201/ac-group3-final-project/")
scores_df <- read.csv("../data:/scoresspread.csv")
scores_df <- read.csv("/data:/scoresspread.csv")
scores_df <- read.csv("data:/scoresspread.csv")
scores_df %>%
filter(schedule_season != 2020) %>%
group_by(schedule_season, spread_favorite) %>%
summarize(count = n())
scores_df %>%
filter(schedule_season != 2020) %>%
group_by(schedule_season, spread_favorite) %>%
summarize(count = n()) %>% tail()
runApp('shiny:')
runApp()
setwd("~:/shiny")
setwd("~/Desktop/INFO201/ac-group3-final-project/shiny:/")
runApp()
scores_df %>%
mutate(is2020 = schedule_season == 2020) %>%
group_by(schedule_season, spread_favorite) %>%
summarize(count = n(), is2020)
runApp()
runApp()
scores_df %>%
mutate(is2020 = schedule_season == 2020) %>%
group_by(schedule_season, spread_favorite) %>%
summarize(count = n(), is2020) %>%
group_by(is2020, spread_favorite) %>%
summarize(avg = mean(count))
scores_df %>%
mutate(is2020 = schedule_season == 2020) %>%
group_by(schedule_season, spread_favorite) %>%
summarize(count = n(), is2020) %>%
group_by(is2020, spread_favorite) %>%
summarize(avg = mean(count)) %>% tail()
runApp()
scores_df %>%
filter(-5 >= spread_favorite) %>%
group_by(schedule_season) %>%
summarize(count = n())
scores_df %>%
filter(-5 >= spread_favorite) %>%
group_by(schedule_season) %>%
summarize(count = n()) %>%  tail()
scores_df %>%
filter(0 >= spread_favorite) %>%
group_by(schedule_season) %>%
summarize(count = n()) %>%  tail()
scores_df %>%
filter(0 <= spread_favorite) %>%
group_by(schedule_season) %>%
summarize(count = n()) %>%  tail()
runApp()
scores_df %>%
filter(input$spread_slider == spread_favorite) %>%
group_by(schedule_season) %>%
summarize(count = n(), covered = mean(favorite_cover))
scores_df %>%
filter(-3 == spread_favorite) %>%
group_by(schedule_season) %>%
summarize(count = n(), covered = mean(favorite_cover))
runApp()
scores_df %>%
filter(input$spread_slider == spread_favorite) %>%
group_by(schedule_season) %>%
summarize(count = n(), favorite_cover)
scores_df %>%
filter(-3.5 == spread_favorite) %>%
group_by(schedule_season) %>%
summarize(count = n(), favorite_cover)
scores_df %>%
filter(-3.5 == spread_favorite) %>%
group_by(schedule_season, favorite_cover) %>%
summarize(count = n())
scores_df %>%
filter(-3.5 == spread_favorite) %>%
group_by(schedule_season, favorite_cover) %>%
summarize(count = n()) %>% tail()
runApp()
View(scores_df)
runApp()
scores_df %>%
mutate(is2020 = schedule_season == 2020) %>%
group_by(schedule_season, spread_favorite) %>%
summarize(count = n(), is2020) %>%
group_by(is2020, spread_favorite) %>%
summarize(avg = mean(count)) %>%
ggplot(aes(x = spread_favorite)) +
geom_bar(aes(y = avg, fill = is2020), stat = "identity", position = position_dodge()) +
scale_fill_discrete(name = "legend", labels = c("1966-2019","2020")) +
guides(fill = guide_legend(reverse=TRUE)) +
theme(legend.position="top") +
labs(x = "Spread", y = "Count") +
theme_ipsum()
runApp()
runApp()
scores_df %>%
filter(input$spread_slider == spread_favorite) %>%
group_by(schedule_season, favorite_cover) %>%
summarize(count = n())
scores_df %>%
filter(-3.5 == spread_favorite) %>%
group_by(schedule_season, favorite_cover) %>%
summarize(count = n())
scores_df %>%
filter(-3.5 == spread_favorite) %>%
group_by(schedule_season, favorite_cover) %>%
summarize(count = n()) %>% tail()
scores_df %>%
filter(-3.5 == spread_favorite) %>%
group_by(schedule_season, favorite_cover) %>%
summarize(count = n()) %>% order() %>%  tail()
scores_df %>%
filter(-3.5 == spread_favorite) %>%
group_by(schedule_season, favorite_cover) %>%
summarize(count = n()) %>% arrange(favorite_cover) %>%  tail()
scores_df %>%
filter(-3.5 == spread_favorite) %>%
group_by(schedule_season, favorite_cover) %>%
summarize(count = n()) %>% arrange(favorite_cover, reverse = T
) %>%  tail()
scores_df %>%
filter(-3.5 == spread_favorite) %>%
group_by(schedule_season, favorite_cover) %>%
summarize(count = n()) %>% arrange(favorite_cover, reverse = T
) %>%  head()
scores_df %>%
filter(-3.5 == spread_favorite) %>%
group_by(schedule_season, favorite_cover) %>%
summarize(count = n()) %>% map_df(favorite_cover) %>%  head()
scores_df %>%
filter(-3.5 == spread_favorite) %>%
group_by(schedule_season, favorite_cover) %>%
summarize(count = n()) %>% map_df(rev) %>%  head()
runApp()
runApp()
runApp()
o_histdf <- read.csv("../data:/offensehistory.csv")
View(o_histdf)
avgou <- scores_df %>%
group_by(schedule_season) %>%
summarize(ou = mean(over_under_line, na.rm = T))
avgou <- left_join(o_histdf %>% select(year, scoreperc), avgou, by = c("year" = "schedule_season"))
View(avgou)
runApp()
shiny::runApp()
cd ..
setwd("~/desktop/info201/ac-group3-final-project")
library("ggplot2")
library("ggplot2")
source("scripts:/summaryinfo.R")
library("ggplot2")
source("scripts:/summaryinfo.R")
library("ggplot2")
source("scripts:/summaryinfo.R")
library("ggplot2")
source("scripts:/summaryinfo.R")
scores_df <- read.csv("../data:/scoresspread.csv")
scores_df <- read.csv("../data:/scoresspread.csv")
scores_df <- read.csv("/data:/scoresspread.csv")
pwd()
wd()
library("ggplot2")
source("scripts:/summaryinfo.R")
list.files()
setwd(~/desktop/info201/ac-group3-final-project/scripts)
setwd(~/desktop/info201/ac-group3-final-project:/scripts)
setwd("~/desktop/info201/ac-group3-final-project:/scripts"
)
library("ggplot2")
source("summaryinfo.R")
library("ggplot2")
source("summaryinfo.R")
library("knitr")
read.csv("data:/scoresspread.csv")
scores_df <- read.csv("../data:/scoresspread.csv")
scores_df <- read.csv("data:/scoresspread.csv")
library("ggplot2")
source("summaryinfo.R")
scores_df <- read.csv("/data:/scoresspread.csv")
scores_df <- read.csv("data:/scoresspread.csv")
library("ggplot2")
source("summaryinfo.R")
scores_df <- read.csv("data:/scoresspread.csv")
library("ggplot2")
source("summaryinfo.R")
runApp('shiny:')
library(tidyverse)
library(shiny)
library(ggplot2)
library(plotly)
library(viridis)
library(hrbrthemes)
library(gtools)
library(shinyWidgets)
runApp('shiny:')
runApp('shiny:')
